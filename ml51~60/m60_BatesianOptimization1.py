param_bounds = {'x1' : (-1, 5),
                'x2' : (0,4)
                }

def y_function(x1, x2):
    return -x1 **2 - (x2 - 2) **2 + 10

from bayes_opt import BayesianOptimization

optimizer = BayesianOptimization(
    f = y_function,
    pbounds = param_bounds,
    random_state=337
)

optimizer.maximize(init_points=10,
                   n_iter=2000)

# print(optimizer.max)
# |   iter    |  target   |    x1     |    x2     |
# -------------------------------------------------
# | 1         | -6.356    | 3.799     | 0.6143    |
# | 2         | 0.9635    | 2.407     | 0.1988    |
# | 3         | 3.672     | 2.272     | 0.9201    |
# | 4         | 8.725     | 1.037     | 1.554     |
# | 5         | 9.052     | -0.01669  | 2.973     |
# | 6         | -9.285    | 4.279     | 1.012     |
# | 7         | 9.734     | -0.0501   | 1.487     |
# | 8         | -1.884    | 3.256     | 3.133     |
# | 9         | 6.617     | 1.379     | 3.217     |
# | 10        | 9.963     | 0.06516   | 1.819     |
# | 11        | 8.982     | -1.0      | 2.136     |
# | 12        | 5.0       | -1.0      | 0.0       |
# | 13        | 5.0       | -1.0      | 4.0       |
# | 14        | 9.906     | -0.2757   | 2.132     |
# | 15        | 9.828     | 0.3019    | 2.285     |
# | 16        | 9.878     | -0.288    | 1.803     |
# | 17        | 9.995     | -0.000333 | 2.073     |
# | 18        | 9.997     | -0.04865  | 1.973     |
# | 19        | 9.996     | 0.06654   | 2.005     |
# | 20        | 9.999     | -0.02723  | 1.991     |
# =================================================
# {'target': 9.999178614219336, 'params': {'x1': -0.027232309191155376, 'x2': 1.9910676365511377}}